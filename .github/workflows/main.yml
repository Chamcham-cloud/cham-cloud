on:
  workflow_dispatch:

jobs:
  macos-vnc:
    runs-on: macos-13
    timeout-minutes: 360

    steps:
      - name: Create VNC User and Set Password
        run: |
          # 'runner' kullanıcısıyla çakışmayı önlemek için tamamen yeni bir kullanıcı oluştur.
          VNC_USER="vncuser"
          VNC_PASS=$(openssl rand -base64 16)
          
          echo "VNC_USER=${VNC_USER}" >> $GITHUB_ENV
          echo "VNC_PASS=${VNC_PASS}" >> $GITHUB_ENV

          # macOS üzerinde 'vncuser' adında yeni bir kullanıcı oluştur.
          sudo dscl . -create /Users/$VNC_USER
          sudo dscl . -create /Users/$VNC_USER UserShell /bin/bash
          sudo dscl . -create /Users/$VNC_USER RealName "VNC User"
          sudo dscl . -create /Users/$VNC_USER UniqueID "1001"
          sudo dscl . -create /Users/$VNC_USER PrimaryGroupID 20
          sudo dscl . -create /Users/$VNC_USER NFSHomeDirectory /Users/$VNC_USER
          
          # Yeni kullanıcının şifresini ayarla.
          sudo dscl . -passwd /Users/$VNC_USER "$VNC_PASS"
          
          # Yeni kullanıcıyı yönetici (admin) grubuna ekle. Bu çok önemli.
          sudo dscl . -append /Groups/admin GroupMembership $VNC_USER
          
          echo "User '$VNC_USER' created and added to the admin group."

      - name: Enable VNC (Screen Sharing) for New User
        run: |
          # VNC'yi etkinleştir ve oluşturduğumuz 'vncuser' kullanıcısına tüm izinleri ver.
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
              -activate -configure -access -on \
              -users ${{ env.VNC_USER }} -privs -all \
              -restart -agent -menu
          echo "VNC service enabled for user '${{ env.VNC_USER }}'."

      - name: Install and Start Tailscale
        run: |
          brew install tailscale
          # DÜZELTME: Tailscale servisini `up` komutundan önce başlat.
          sudo brew services start tailscale
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-macos-${{ github.run_id }} --accept-routes

      - name: Get Tailscale IP
        run: |
          TS_IP=""
          for i in {1..10}; do
            TS_IP=$(tailscale ip -4)
            if [ -n "$TS_IP" ]; then
              echo "Tailscale IP address acquired: $TS_IP"
              break
            fi
            echo "Waiting for Tailscale IP... ($i/10)"
            sleep 5
          done

          if [ -z "$TS_IP" ]; then
            echo "::error::Could not get Tailscale IP address."
            exit 1
          fi
          
          echo "TAILSCALE_IP=$TS_IP" >> $GITHUB_ENV

      - name: Maintain Connection
        run: |
          echo ""
          echo "=== VNC CONNECTION DETAILS ==="
          echo "Server Address: ${{ env.TAILSCALE_IP }}"
          echo "Username      : ${{ env.VNC_USER }}" # Artık 'vncuser' kullanılacak
          echo "Password      : ${{ env.VNC_PASS }}"
          echo "==============================="
          echo ""
          
          while true; do
            echo "[$(date)] VNC session is active. Cancel the workflow to terminate."
            sleep 300
          done
